{"ts":1341848495586,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Code at https://gist.github.com/1514715\n//This is for goolgle analtyics, tracking of external link clikcs.\n(function () {\n    var aTags = document.getElementsByTagName('a'),\n        \n        // This will match weather or not the href is a full url \n        // such as \"http://www.example.com/\" and not \"/index.html\".\n        //\n        // This is needed because matchServer assumes a full url,\n        // however if the href is a path like / nothing will be matched\n        // which means nothing will be replaced and the linkServer will \n        // resolve to /my/path/html.This can probably be cleaned up to\n        // a use a match instead, and only need 1 regex.\n        matchFullLink = new RegExp(\"^.+://\", \"gi\"),\n        \n        //RegEx to grab the server name.\n        matchServer = new RegExp(\"^.*://([^/]+).+\", \"gi\"),\n        \n        //Replace whole match, server name stored in first captured.\n        currentServer = window.location.toString().replace(matchServer, \"$1\"),\n        \n        // Quick detect which event listener to use.  Quick and dirty but fine\n        // since not it's not getting crazy wiht the event handlers.\n        addEventFunctionName = (document.createElement('a')).addEventListener ? \"addEventListener\" : \"attachEvent\",\n\n        //current node in loop\n        link = null,\n        \n        //Used in for loop.  Represents current index of the node list\n        i = 0,\n        \n        //This will hold the server of the curren link's href\n        linkServer = \"\",\n        \n        //This will hold the current link's href\n        linkHref = \"\";\n\n    //This will be called when a link is cliked\n    function handleExternLinkTrac(e, linkHref, linkServer){\n    \t//Track click event\n        _gaq.push(['_trackEvent', 'Outbound Links', linkServer, linkHref]);\n\t\t//navigating to the links location\n        /*_gaq.push(function(){\n            document.location = linkHref;\n        });*/\n\t}\n    \n    //Loop though all a tags on the page\n    for (i;i < aTags.length; i += 1) {\n        //Set link to the current tag \n        link = aTags[i];\n\n        linkHref = link.href.toString();\n        linkServer = linkHref.replace(matchServer, \"$1\");\n\n        // Make sure that the href is a full url(See notes above for\n        // matchFullLink) and check to make sure the server name\n        // isn't the same as the current server.\n        if (matchFullLink.test(linkHref) && linkServer !== currentServer) {\n            console.log(linkHref);\n            //Link Click Event Handler\n            link[addEventFunctionName]('click', function (e) {\n                // e will be passed to the function in everything but IE.\n            \t// if it's IE get window.event\n        \t\tvar evt = e || window.event;\n                \n                // Prevent the default behavior, of navigating\n            \t// to linked page in this case\n        \t\tevt.cancelBubble = true;\n        \t\tif (evt.stopPropagation) evt.stopPropagation();\n                if (evt.stopImmediatePropagation) evt.stopImmediatePropagation();\n                \n                handleExternLinkTrac(e, linkHref, linkServer);\n                \n                //Further prevent default behavior\n    \t        return false;\n            });\n        }\n    }\n    \n})();"]],"start1":0,"start2":0,"length1":0,"length2":3242}]],"length":3242}
